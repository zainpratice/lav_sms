name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'  # Specify PHP version you want to use
          extensions: mbstring, intl, gd, bcmath, zip, opcache, pdo_mysql

      - name: Install Composer dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install --no-interaction --prefer-dist --optimize-autoloader

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Specify Node.js version

      - name: Install NPM dependencies
        run: npm install

      - name: Build assets for production
        run: npm run prod  # Compile and minify assets for production

      - name: Run tests
        run: |
          php artisan migrate --env=testing  # Optionally run migrations in the testing environment
          vendor/bin/phpunit  # Run PHPUnit tests

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job finishes first
    environment:
      name: production
      url: ${{ secrets.PROD_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key for deployment
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private.key
          chmod 600 private.key
          eval $(ssh-agent -s)
          ssh-add private.key

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no user@${{ secrets.PROD_SERVER_IP }} "
            cd /var/www/lav_sms && git pull origin main && composer install --no-dev --optimize-autoloader && npm run prod && php artisan migrate --force && php artisan config:cache && php artisan route:cache
          "
        env:
          PROD_SERVER_IP: ${{ secrets.PROD_SERVER_IP }}
