name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Set up PHP
    - name: Set up PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, bcmath, intl, curl, gd
        coverage: none
        tools: composer
    
    # Install Composer dependencies
    - name: Install PHP dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader

    # Set up modern Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    # Clean install Node.js dependencies
    - name: Install Node.js dependencies
      run: |
        npm ci
        npm uninstall node-sass
        npm install sass --save-dev

    # Run tests (optional)
    - name: Run Tests
      run: ./vendor/bin/phpunit

    # Build production assets
    - name: Build assets
      run: npm run production

    # Cache built assets for deployment
    - name: Cache assets
      uses: actions/cache@v3
      with:
        path: |
          public/css
          public/js
          public/mix-manifest.json
        key: ${{ runner.os }}-assets-${{ hashFiles('package-lock.json') }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Restore cached assets
    - name: Restore assets
      uses: actions/cache@v3
      with:
        path: |
          public/css
          public/js
          public/mix-manifest.json
        key: ${{ runner.os }}-assets-${{ hashFiles('package-lock.json') }}

    # Set up PHP for deployment
    - name: Set up PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, bcmath, intl, curl, gd
        coverage: none
        tools: composer

    # Deploy application to the server via SSH
    - name: Deploy to Server
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd /var/www/lav_sms
          git pull origin main
          composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
          npm ci --production
          npm run production
          php artisan migrate --force
          php artisan config:clear
          php artisan config:cache
          php artisan route:clear
          php artisan route:cache
          php artisan view:clear
          php artisan view:cache
          sudo systemctl restart apache2
