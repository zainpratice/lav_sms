name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    # Set up PHP
    - name: Set up PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, bcmath, intl, curl, gd
        coverage: none
    
    # Install Composer
    - name: Install Composer
      run: |
        curl -sS https://getcomposer.org/installer | php
        mv composer.phar /usr/local/bin/composer

    # Install Dependencies
    - name: Install PHP dependencies
      run: |
        composer install --no-interaction --prefer-dist --optimize-autoloader

    # Set up Node.js
    - name: Set up Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    # Install Node.js dependencies
    - name: Install Node.js dependencies
      run: |
        npm install

    # Replace node-sass with sass to fix compatibility issues
    - name: Replace node-sass with sass
      run: |
        npm uninstall node-sass
        npm install sass

    # Run tests (optional)
    - name: Run Tests
      run: |
        ./vendor/bin/phpunit

    # Build the application assets
    - name: Build assets
      run: |
        npm run production

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    # Set up PHP for deployment
    - name: Set up PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, bcmath, intl, curl, gd
        coverage: none
    
    # Install Composer dependencies
    - name: Install Composer dependencies
      run: |
        curl -sS https://getcomposer.org/installer | php
        mv composer.phar /usr/local/bin/composer
        composer install --no-interaction --prefer-dist --optimize-autoloader

    # Deploy application to the server via SSH
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_IP }}  # Your server IP stored in GitHub secrets
        username: ${{ secrets.SERVER_USER }}  # Your SSH username stored in GitHub secrets
        key: ${{ secrets.SSH_PRIVATE_KEY }}  # Your private key stored in GitHub secrets
        port: 22
        script: |
          cd /var/www/lav_sms  # Your app directory on the server
          git pull origin main
          composer install --no-interaction --prefer-dist --optimize-autoloader
          npm install
          npm run production
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          sudo systemctl restart apache2
